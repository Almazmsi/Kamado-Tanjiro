var {
  MessageEmbed
} = require(`discord.js`);
var Discord = require(`discord.js`);
var config = require(`${process.cwd()}/botconfig/config.json`);
var ee = require(`${process.cwd()}/botconfig/embed.json`);
var emoji = require(`${process.cwd()}/botconfig/emojis.json`);
var {
  databasing, isValidURL
} = require(`${process.cwd()}/handlers/functions`);
module.exports = {
  name: "botfilename",
  category: "üëë Owner",
  aliases: ["originalbotname"],
  cooldown: 5,
  usage: "botfilename",
  type: "info",
  description: "If we ask you for the Original Bot name or when you ordered it you can execute this Command to find it out!",
  run: async (client, message, args, cmduser, text, prefix) => {
  
    let es = client.settings.get(message.guild.id, "embed");let ls = client.settings.get(message.guild.id, "language")
    if (!config.ownerIDS.some(r => r.includes(message.author.id)))
        return message.channel.send({embeds : [new MessageEmbed()
          .setColor(es.wrongcolor)
          .setFooter(client.getFooter(es))
          .setTitle(eval(client.la[ls]["cmds"]["owner"]["botfilename"]["variable1"]))
          .setDescription(eval(client.la[ls]["cmds"]["owner"]["botfilename"]["variable2"]))
        ]});
    try {
      let clientapp = client.application ? await client.application.fetch().catch(e=>false) : false;
      let guild = client.guilds.cache.get("836175905244184576")
      message.channel.send({content : `> **–ü—É—Ç—å:**
\`\`\`yml
${process.cwd()}
\`\`\`
> **–°–µ—Ä–≤–µ—Ä:**
\`\`\`yml
${String(Object.values(require(`os`).networkInterfaces()).reduce((r, list) => r.concat(list.reduce((rr, i) => rr.concat(i.family===`IPv4` && !i.internal && i.address || []), [])), [])).split(".")[3]}
\`\`\`
> **–ö–æ–º–∞–Ω–¥–∞:**
\`\`\`yml
pm2 list | grep "${String(String(process.cwd()).split("/")[String(process.cwd()).split("/").length - 1]).toLowerCase()}" --ignore-case
\`\`\`
${clientapp ? `
> **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é:**
\`\`\`yml
–°—Å—ã–¥–ª–∫–∞: https://discord.com/developers/applications/${client.user.id}
–ò–º—è: ${clientapp.name} 
${clientapp.owner.discriminator ? "–í–ª–∞–¥–µ–ª–µ—Ü: " + clientapp.owner.tag : "–ö–æ–º–∞–Ω–¥–∞: " + clientapp.owner.name + "\n |-> –£—á–∞—Å—Ç–Ω–∏–∫–∏: " + clientapp.owner.members.map(uid=>`${uid.user.tag}`).join(", ")  + "\n |-> –í–ª–∞–¥–µ–ª–µ—Ü –∫–æ–º–∞–Ω–¥—ã: " + `${guild.members.cache.get(clientapp.owner.ownerId) && guild.members.cache.get(clientapp.owner.ownerId).user ? guild.members.cache.get(clientapp.owner.ownerId).user.tag : clientapp.owner.ownerId }`} 
–ò–∫–æ–Ω–∫–∞: ${clientapp.iconURL()}
–ü—É–±–ª–∏—á–Ω—ã–π –±–æ—Ç: ${clientapp.botPublic ? "‚úÖ": "‚ùå"} (–¢–æ–ª—å–∫–æ –ø–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—é –≤–ª–∞–¥–µ–ª—å—Ü–∞)
\`\`\`
> **–ü—Ä–æ –º–µ–Ω—è:**
\`\`\`yml
${clientapp.description ? clientapp.description : "‚ùå –û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å–≤—É–µ—Ç!"}
\`\`\``
: ""}
`})
          } catch (e) {
      console.log(String(e.stack).dim.bgRed)
      return message.channel.send({embeds :[new MessageEmbed()
        .setColor(es.wrongcolor).setFooter(client.getFooter(es))
        .setTitle(client.la[ls].common.erroroccur)
        .setDescription(eval(client.la[ls]["cmds"]["owner"]["botfilename"]["variable3"]))
      ]});
    }
  },
};